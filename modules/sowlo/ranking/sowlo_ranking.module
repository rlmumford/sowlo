<?php

use Drupal\user\UserInterface;
use Drupal\sowlo_ranking\Entity\CandidateRank;
use Drupal\sowlo_role\Entity\Role;

/**
 * Implements hook_cron().
 */
function sowlo_ranking_cron() {
  $query = \Drupal::database()->select('sowlo_ranking_spool', 'srs');
  $query->fields('srs', ['idA', 'idB', 'handler']);
  $query->condition('srs.started', 0);
  $query->orderBy('srs.queued', 'ASC');
  $query->range(0, 50);
  $games = $query->execute()->fetchAll(\PDO::FETCH_OBJ);

  $game_manager = \Drupal::service('plugin.manager.ranking_game');
  foreach ($games as $game) {
    $rankA = CandidateRank::load($game->idA);
    $rankB = CandidateRank::load($game->idB);
    if ($rankA->excluded->value || $rankB->excluded->value) {
      continue;
    }

    \Drupal::database()->update('sowlo_ranking_spool')
      ->fields(['started' => time()])
      ->condition('idA', $game->idA)
      ->condition('idB', $game->idB)
      ->condition('handler', $game->handler)
      ->execute();

    $plugin = $game_manager->createInstance($game->handler);
    $plugin->game($rankA, $rankB);

    \Drupal::database()->update('sowlo_ranking_spool')
      ->fields(['finished' => time()])
      ->condition('idA', $game->idA)
      ->condition('idB', $game->idB)
      ->condition('handler', $game->handler)
      ->execute();
  }
}

/**
 * Implements hook_sowlo_role_insert().
 */
function sowlo_ranking_sowlo_role_insert(Role $role) {
  $game_manager = \Drupal::service('plugin.manager.ranking_game');
  foreach ($game_manager->getDefinitions() as $plugin_id => $definition) {
    $game_manager->createInstance($plugin_id)->spoolGamesOnNewRole($role);
  }
}

/**
 * Implements hook_user_insert().
 */
function sowlo_ranking_user_insert(UserInterface $user) {
  if ($user->hasRole('candidate')) {
    $game_manager = \Drupal::service('plugin.manager.ranking_game');
    foreach ($game_manager->getDefinitions() as $plugin_id => $definition) {
      $game_manager->createInstance($plugin_id)->spoolGamesOnNewCandidate($user);
    }
  }
}

/**
 * Implmenets hook_user_update().
 */
function sowlo_ranking_user_update(UserInterface $user) {
  if ($user->hasRole('candidate') && !$user->original->hasRole('candidate')) {
    $game_manager = \Drupal::service('plugin.manager.ranking_game');
    foreach ($game_manager->getDefinitions() as $plugin_id => $definition) {
      $game_manager->createInstance($plugin_id)->spoolGamesOnNewCandidate($user);
    }
  }
}
